name: Build & Test

on: [push, pull_request]
  
jobs:
  build:

    runs-on: self-hosted
  
    defaults:
      run:
        working-directory: .
        
        
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0   
      
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    
    - name: Restore Packages
      run: dotnet restore src\LicenseClearingTool.sln 
    
    - name: Build
      run: msbuild -m -t:Rebuild -p:Configuration=Release -bl:continous-clearing.binlog -noconlog src\LicenseClearingTool.sln
    
    - name: Archive Build Log
      uses: actions/upload-artifact@v2
      if: ${{ success() || failure() }}
      with:
        name: Compile_Solution_log
        path: |
          src/*.binlog
          *.binlog

    - name: update appSettingsSW360IntegrationTest.json
      run: |
        $WF = Join-Path $env:GITHUB_WORKSPACE "Scripts"
        Write-Host "'$WF'"
        dir        
        ./Scripts/json_update.ps1 -JsonFile 'src\TestUtilities\appSettingsSW360IntegrationTest.json' 
      env:
        SW360HOST: ${{ secrets.SW360HOST }}
        SW360APPPORT: ${{ secrets.SW360APPPORT }}
        FOSSYHOST: ${{ secrets.FOSSYHOST }}
        FOSSYAPPPORT: ${{ secrets.FOSSYAPPPORT }}
        USEREMAIL: ${{ secrets.USEREMAIL }}
        ARTIFACTORYAPIKEY: ${{ secrets.ARTIFACTORYAPIKEY }}
        JFROGURL: ${{ secrets.JFROGURL }}
        SW360AUTHKEY: ${{ secrets.SW360AUTHTOKEN }}
      
    - name: update appsettingsUnitTest.json
      run: ./Scripts/json_update_ut.ps1 -JsonFile 'src\UnitTestUtilities\appsettingsUnitTest.json' 
      env:
        SW360HOST: ${{ secrets.SW360HOST }}
        SW360APPPORT: ${{ secrets.SW360APPPORT }}
        FOSSYHOST: ${{ secrets.FOSSYHOST }}
        FOSSYAPPPORT: ${{ secrets.FOSSYAPPPORT }}
        JFROGURL: ${{ secrets.JFROGURL }}
    - name: Create zip
      id: packageBuildResults
      run: |
        $sourceFolder = Join-Path $env:GITHUB_WORKSPACE "out" | Join-Path -ChildPath "*"
        $outFolder = Join-Path $env:GITHUB_WORKSPACE "out" | Join-Path -ChildPath "LicenseClearingTool" 
        New-Item -ItemType Directory -Force -Path $outFolder
        $fileName = "LicenseClearingTool.zip"
        Write-Host "Filename: '$fileName'"
        Write-Host "sourceFolder: '$sourceFolder'"
        Write-Host "Outfolder: '$outFolder'"
        dir
        $outPath = Join-Path $outFolder $fileName
        Compress-Archive -DestinationPath $outPath -Path $sourceFolder -CompressionLevel Optimal
      
    - name: SW3360 Instance refresh
      if: ${{ false }}  # disable for now
      run: |
        docker exec -dt sw360confctnr1 service postgresql stop
        docker stop sw360confctnr1
        docker rm sw360confctnr1        
        docker run --name sw360confctnr1 --memory=7g -t -d -p ${env:SW360APPPORT}:8080 -p 5990:5984 -p 5440:5432 ${env:DOCKERDEVARTIFACTORY}/energy-dev/software-clearing/sw360/sw360conf:latest
        Start-Sleep -s 540
      env:
         SW360APPPORT: ${{ secrets.SW360APPPORT }}
         DOCKERDEVARTIFACTORY: ${{ secrets.DOCKERDEVARTIFACTORY }}
         
    - name: Test
      if: ${{ false }}  # disable for now
      run: |
        $TestProjects = Get-ChildItem -Path *test*.csproj -Recurse -exclude TestUtilities.csproj,UnitTestUtilities.csproj
        Write-Host "**************************The test projects considered for execution: $TestProjects   ******************************"
        Write-Host "********************************************************************************************************************"
        foreach ($Project in $TestProjects) 
        {                 
                Write-Host $Project.DirectoryName
                $TestProject = $Project.DirectoryName
                Push-Location $Project.PSParentPath
                dotnet test --no-build --configuration Release
        }

    - name: Archive Build Result
      uses: actions/upload-artifact@v2
      with:
        name: LicenseClearingTool
        path: |
           out/LicenseClearingTool
           
    - name: Create Nuget Packages    
      run: |
        nuget pack CA.nuspec  
        
    - name: Archive NuGet Packages
      uses: actions/upload-artifact@v2
      with:
        name: nuget-LicenseClearingTool
        path: |
          LicenseClearingTool.1.0.0.nupkg   
          
    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile --tag licenseclearingtool:2702

